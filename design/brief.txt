**You should build something which looks like this:**

**When hovering over album covers or artist names, you should implement the following hover styles:**


## How to use the Spotify data & construct your components ü§ì
In the `code/src/data.json`, we've included an API response from Spotify which contains data for 50 recent releases. You can `import` this JSON file into a component using `import data from './data.json'` (which we've already done for you in the App component).

The result of importing the JSON is a variable called `data` which includes the full JSON response. Your task is to use this, along with `.map()` to mount an 'Album' component for each album. Within those components, you could then break things up further. For example, your app could have a structure like this:

- `App` component which has the `data`
    - `Album` component which is rendered using `.map()` and which you pass the album data into using props.
        - `Artist` component which is rendered using `.map()` using each item in the `artists` array, inside the `Album` component to show the artist name and a link.

This is just a suggestion - how you decide to structure your components is completely up to you.



## Design üé®
You should follow the design screenshots as closely as possible. We've provided icons for the play, heart and more info icons when hovering on an album. Use the following for fonts;

- Album title - 14px Helvetica #ffffff
- Artist name - 14px Helvetica #a0a0a0



## How to hand in the code üéØ
- When you‚Äôre finished with the project, push your code to GitHub 
- Navigate to your repo and create a Pull Request into the Technigo repo (Add a link to your deployed project.)
- Wait for the code review



## Requirements üß™

**General Requirements**

- Contribute by helping others with this project on Stack Overflow.
- If selected; demo your solution for your team.
- Code follows Technigo‚Äôs code guidelines
- Publish your site on Netlify.

**üîµ  Blue Level (Minimum Requirements)**
    - the name of each artist involved with a comma between

- When you click on the album, it should link to the album's external url in the data
- When you click on an artist, it should link to the artist's external url in the data
- Your page should be responsive:
    - showing 4 albums per row on desktop
    - 2 per row on tablet
    - 1 per row on mobile.


**üî¥  Red Level (Intermediary Goals)**
- Create CSS rules or Javascript logic so that if there are only two artists you show a "&" between them, and if there are more than two artists, you show "," between all artists except the last two which should have "&":
    - *Teyana Taylor & Kehlani*
    - *Y2K, bbno$ & Enrique Iglesias*
- Lower the opacity of the play button icons and then when you hover over the play button, it should have full opacity



**‚ö´  Black Level (Advanced Goals)**
- We've provided another API response which includes a list of popular playlists. Use this, along with some new components to render a list of playlists in a sidebar.
- Sort the albums from the singles and create two different sections on your site
- Incorporate more information from the API response to make your site richer

üö® Don't forget to add, commit and push the changes to GitHub when you're done. üèÅ